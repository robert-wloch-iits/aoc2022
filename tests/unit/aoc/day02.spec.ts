import {describe, it, expect} from 'vitest'
import {
  parseStrategies,
  calculateStrategyScore,
  totalScoreOfStrategies,
  findStrategicResponseOnChoiceOfOpponent,
  parseResponseStrategies,
  RockPaperScissorsOpponentType as OpponentRPS,
  RockPaperScissorsResponseType as ResponseRPS,
  StrategyType as Strategy,
  RockPaperScissorsResponseStrategyType as ResponseStrategyRPS,
  ResponseStrategyType as ResponseStrategy,
} from '@/aoc2022/day02'

const aoc = {
  puzzleInput: `B Z
  A Z
  B Z
  C Z
  C Z
  B X
  A X
  C X
  A Z
  C Y
  C X
  C Y
  C Y
  A X
  A Z
  A Z
  A X
  B Z
  B X
  A Z
  A X
  C Y
  A X
  B Z
  B Z
  A X
  C Z
  A Z
  A X
  B Z
  A Z
  A Y
  C Y
  A Z
  C Z
  A Z
  C Y
  C Z
  C Z
  A Z
  A X
  A X
  B X
  A Z
  B Z
  A X
  A Z
  A Z
  A X
  A X
  C Y
  A Z
  B X
  C Y
  A X
  B Y
  A Z
  A X
  A Z
  A X
  C Z
  A Z
  A Y
  A X
  C Y
  A X
  B X
  A X
  A Z
  C Y
  A Z
  A X
  C X
  C Z
  C Z
  A Z
  A X
  A Z
  C X
  C Z
  B Z
  A Z
  C Y
  C Z
  B X
  A X
  A Z
  A X
  A X
  C Y
  A Z
  C Z
  B X
  A X
  A X
  A Z
  A Y
  A X
  C X
  A Z
  B X
  C Y
  A X
  A X
  A X
  C X
  B Z
  B Z
  A Z
  A X
  A Z
  C Z
  C X
  C Y
  B X
  C Z
  A Z
  C X
  A Z
  A X
  A X
  A X
  A X
  A Z
  B X
  A X
  B X
  C Z
  A Z
  A Z
  A X
  A X
  A X
  B X
  A Z
  A X
  A Z
  A X
  B Z
  A Z
  A X
  B Z
  A Z
  A Z
  C Y
  B Z
  A Z
  B Z
  A Z
  A X
  C X
  A X
  C Y
  C X
  A X
  A X
  C Y
  A Z
  A X
  B Z
  A Z
  A Z
  B X
  B Z
  A X
  A Z
  A X
  A X
  A Z
  A X
  A Z
  A Z
  C X
  A Z
  A X
  C Y
  A Z
  A Z
  A X
  A X
  A X
  A X
  B Z
  B X
  A Z
  A X
  A Z
  C Y
  B Y
  C Y
  B X
  A Z
  A Z
  A Z
  C Y
  A Z
  A X
  B Z
  C X
  A X
  C Z
  C X
  C Y
  A Z
  A X
  A Z
  C Z
  A Z
  A Z
  A Y
  C Z
  A X
  A X
  B Z
  A Z
  C Z
  A Z
  A X
  A Z
  A Z
  A Z
  A Z
  A Z
  A Z
  A Z
  A Z
  C X
  A X
  A X
  A X
  B Y
  B X
  A X
  A Z
  A Z
  A X
  A Z
  A X
  A X
  A Z
  B X
  A Z
  C Z
  A Z
  C Z
  A Z
  A Z
  C Z
  A X
  C Z
  A X
  C X
  A Z
  A Z
  B Z
  A Y
  B Z
  A X
  B Z
  A Z
  A X
  A Z
  A Z
  A X
  A Z
  B Z
  C X
  A Z
  A X
  B Z
  C Y
  B Z
  C X
  A Z
  A Z
  C X
  B X
  C Z
  A Z
  A X
  A Z
  C X
  A Z
  C Z
  C Z
  B Z
  B Z
  A Z
  C X
  A X
  B Y
  A Y
  A Z
  C X
  B X
  A Z
  A Z
  B Y
  A Z
  A Z
  C Z
  A Z
  A X
  A Z
  B X
  C Z
  B X
  A Z
  B Z
  C Y
  A X
  A X
  A Z
  A Z
  A Z
  C Y
  A X
  A Z
  A Z
  A X
  B Z
  A Z
  C X
  C Z
  A Z
  A X
  B Z
  A X
  C Y
  A X
  A Z
  A Y
  C Z
  A Y
  A Z
  C X
  C Y
  A Z
  C Y
  A Z
  A X
  C Y
  A Z
  A X
  A X
  B Z
  A X
  C X
  A X
  C X
  A X
  A Z
  A X
  A Z
  A Z
  A X
  C X
  C Z
  A Z
  C Z
  C X
  A Z
  C Y
  A X
  A Z
  A Z
  C Y
  A X
  B X
  C Y
  B Z
  C Y
  A X
  A X
  C Z
  A X
  A Z
  A X
  A X
  C X
  A X
  A Z
  B X
  C Z
  A Y
  B Y
  A Z
  A Z
  A Z
  A Z
  B Y
  A Y
  A Z
  B Z
  A Z
  A X
  C Z
  B Y
  C Y
  A X
  A Z
  C Z
  B Z
  A Z
  A Z
  A Y
  C Z
  A Z
  A Z
  C Z
  C Z
  C Z
  A X
  B Y
  C X
  A X
  A Z
  A Z
  B Z
  A Y
  A X
  A Z
  B X
  A X
  A X
  A Z
  A Y
  A Z
  A X
  B X
  A Z
  C X
  A Z
  A X
  C X
  B X
  B Y
  B X
  A Z
  A Z
  A Z
  A X
  B X
  A X
  B Z
  A Y
  B Z
  C Z
  A X
  C Z
  C X
  A Z
  C Y
  C Y
  A Z
  A X
  A X
  A X
  B X
  A Z
  A Y
  C Y
  B X
  A X
  A X
  A X
  C Y
  A Z
  A Y
  A X
  C Z
  A Z
  A Z
  A Z
  C Z
  A X
  A Z
  C Z
  B X
  C Y
  A Z
  B Z
  B Z
  C Z
  C Z
  A X
  A Z
  A Z
  B X
  B X
  A Z
  A Z
  A Y
  C Z
  A Z
  A X
  C Z
  A Z
  C Z
  C Z
  A Z
  A Z
  B Z
  A X
  B Y
  A Z
  A X
  C Z
  A X
  B X
  A Z
  C Y
  A Z
  C X
  C Y
  A X
  C X
  C X
  A Z
  C Z
  C Y
  A Z
  A Z
  A X
  A X
  C Z
  A Y
  A Z
  A X
  B Z
  A X
  A Z
  A Z
  A X
  B Z
  A X
  A Z
  C X
  A Z
  A Z
  C X
  A Z
  A X
  A Z
  A X
  B Z
  A Z
  A Z
  C Y
  C Y
  C Z
  C Z
  C Y
  A X
  A X
  A X
  A Z
  A Z
  C Y
  A Z
  C Z
  A Z
  C Z
  B Z
  B X
  A Y
  C Y
  A X
  A Z
  A X
  A X
  A Z
  C Z
  C Y
  C Y
  A Y
  A X
  A Z
  A X
  C Z
  A X
  A Z
  A Z
  C Y
  A X
  A Z
  A Z
  A X
  B Y
  A Z
  A Z
  A Z
  A Z
  C Y
  A Z
  A X
  A X
  A Z
  A Z
  C Y
  A Z
  A Z
  B Z
  A Z
  A X
  A X
  A Y
  C Z
  C Z
  A Z
  B Z
  A Z
  A Z
  A X
  A X
  C Z
  A Z
  A X
  A X
  A Z
  A Z
  B Y
  A Y
  C Y
  A X
  A Z
  C Z
  C Y
  A Z
  C Y
  A X
  A X
  A X
  A Z
  C Y
  C Y
  A Z
  B X
  C Y
  A Z
  A X
  A Z
  A Y
  C Y
  C Z
  B Z
  A Z
  C Y
  A X
  C Z
  A X
  C Y
  C Z
  A Z
  C Y
  C Y
  A Y
  B X
  A Z
  C Z
  B Z
  B Y
  A Z
  C Y
  A X
  A Z
  A Z
  C Y
  A Z
  C Z
  A Z
  A Z
  A X
  A Z
  A Z
  C Z
  A X
  A Z
  C Z
  C Y
  A X
  A X
  C Z
  C Y
  A Z
  C Y
  A Z
  A X
  A X
  A Z
  A Z
  A X
  A Z
  C Y
  C Z
  A Z
  B X
  C Z
  A Z
  A Z
  A X
  B X
  A Z
  A Y
  A X
  C Z
  B X
  A Z
  C Y
  C Z
  C Z
  C Z
  A Z
  A Z
  A X
  A Z
  C Z
  C Y
  A X
  A Z
  A Z
  A Y
  A X
  A Z
  A Z
  C X
  B Z
  A X
  A Z
  A X
  C Z
  A X
  C X
  A X
  C Y
  C Y
  A X
  A X
  A Z
  B Z
  A Z
  A Y
  B Z
  A X
  C X
  A X
  C X
  A X
  C X
  A Z
  A X
  A X
  A X
  C Y
  A X
  A X
  C X
  C Z
  A X
  B Y
  A X
  B Z
  A Z
  A X
  C Z
  A Z
  A X
  A Z
  A X
  C X
  C Z
  A X
  C Z
  C Y
  C Y
  A X
  A X
  A X
  C Z
  C Z
  A Z
  C Z
  A Z
  B Z
  A Y
  B Z
  A X
  A Z
  A Z
  A Z
  C Z
  A Z
  A X
  A X
  B Z
  A Z
  C Y
  C Z
  B Z
  C Y
  C Z
  A X
  A X
  C X
  B X
  C Z
  A Z
  A Z
  C Z
  A X
  A Z
  A Z
  B X
  B Z
  A Z
  A Z
  B Z
  A Z
  A Z
  B Z
  B Z
  C Z
  A Z
  C Z
  A Z
  A Z
  C Z
  A Z
  A Z
  B Z
  A Z
  A X
  A X
  A X
  A Z
  C Z
  A X
  A Z
  A X
  A Z
  B Z
  B Z
  C Z
  A Z
  A Y
  C X
  A X
  A Z
  A X
  A X
  C X
  C Z
  B Y
  A X
  A X
  C Y
  C Y
  A X
  A Z
  A Z
  B Z
  B Z
  A Z
  C Z
  A Z
  C Z
  C X
  A Z
  A X
  A Y
  A X
  A Z
  C Z
  A X
  A Z
  A Z
  A Z
  A X
  C X
  B Z
  A Z
  A Y
  C X
  A Z
  A Z
  A Z
  A X
  A Y
  A X
  C Y
  A Z
  C Y
  A Z
  A Z
  C X
  A Z
  A Y
  C Z
  A X
  A X
  A Z
  A Y
  A Z
  A X
  C Z
  A Z
  A Z
  B Z
  A Z
  A Z
  C X
  B Z
  C Y
  A X
  A Y
  B X
  A Z
  C Z
  C X
  C Z
  A X
  A X
  A Z
  A Z
  A X
  A Z
  B Z
  B Z
  A Z
  B Y
  B Z
  A X
  A X
  C Z
  A Z
  C Y
  B Z
  C Z
  C Z
  A Z
  A X
  B Z
  A X
  A X
  A Z
  A Z
  A X
  B Z
  A Z
  C Z
  A Z
  A Z
  B X
  C Z
  B Z
  C Y
  A Z
  A X
  A X
  B X
  A X
  B Z
  C Y
  C Y
  B Z
  C Y
  C Y
  A X
  A Z
  A Z
  C Y
  B Z
  A X
  A Z
  A X
  B X
  A X
  C Y
  A X
  A X
  B Z
  A X
  B X
  A Z
  C Y
  B Z
  A X
  A Z
  A X
  A X
  B X
  A X
  A X
  A X
  A Z
  A Z
  C Y
  A Z
  B Z
  C Z
  C Y
  C Z
  A X
  A Z
  A X
  C Z
  C Z
  C Z
  C Y
  A X
  B X
  B X
  C X
  C Z
  C X
  C Z
  B Z
  A Y
  A X
  C X
  B X
  A X
  A X
  A Z
  A X
  A Z
  A X
  A X
  A Z
  A Z
  C Z
  A X
  C Y
  C Y
  C Z
  A Z
  A X
  A Z
  A X
  A Z
  A Y
  A Z
  A X
  A X
  A Z
  A X
  A Y
  A Y
  C X
  A Y
  C Y
  C X
  A Z
  C Z
  C Y
  C Z
  A Z
  C X
  A X
  C Z
  A Z
  C Y
  B Z
  A Z
  A Z
  A Z
  C Y
  A X
  A X
  A Z
  A Z
  A Z
  B Z
  C Z
  A X
  C Y
  A X
  A Z
  A X
  C X
  C Z
  A Z
  C Y
  A Y
  A Y
  A Z
  A X
  A Z
  A Y
  A X
  C Z
  A Z
  A Z
  A X
  A X
  B Z
  B Y
  B Y
  C X
  A Z
  A Z
  C Z
  A X
  A Z
  C Y
  B X
  C Y
  A Z
  A Z
  A X
  A Z
  A X
  A X
  C Z
  A Z
  A Z
  A X
  A X
  C Y
  A X
  A X
  C Y
  A Y
  C X
  A X
  C Y
  A Y
  A Z
  B Y
  A X
  C Z
  B X
  A X
  C Z
  A Z
  B Z
  A Z
  A Z
  C X
  A Z
  B Z
  C X
  A Z
  C Y
  A Z
  C Z
  A Z
  C X
  A X
  A Z
  A Y
  B X
  A X
  B X
  A Z
  A Z
  C Y
  A Z
  C Z
  A Z
  A Z
  A Z
  C X
  A Z
  B X
  A X
  A Z
  C Z
  A Z
  A X
  C Y
  A Z
  C Y
  A Z
  A Z
  C Z
  A X
  A Z
  A Z
  B X
  A Z
  A X
  C Z
  B Y
  A Z
  A X
  C Z
  A X
  A Z
  A Z
  A Z
  C Z
  A Z
  A Z
  C X
  A X
  A X
  C X
  A X
  A X
  B Z
  A Z
  A X
  B X
  A X
  A Z
  C Y
  A Z
  B X
  C Y
  A X
  C Z
  A Z
  B Z
  A X
  A Z
  A Z
  C Z
  A X
  C Z
  A X
  C X
  A Y
  A X
  A Z
  C X
  A X
  A X
  A X
  A X
  A Z
  A X
  B Z
  C Z
  C Y
  B Z
  B Z
  B X
  A Z
  A X
  B Z
  A Z
  A X
  C Z
  A Z
  C Y
  B Z
  C Y
  A X
  C X
  A X
  A Z
  C Y
  A Z
  A X
  A Y
  C Y
  C Y
  A Z
  A Z
  C Y
  A Z
  A Z
  A X
  C Y
  B Y
  A X
  A X
  A X
  C Y
  B X
  A Z
  A Y
  A Z
  A Z
  A X
  C Z
  A Z
  A Z
  C X
  A Z
  B Z
  B X
  A X
  C Z
  A X
  C Y
  A Z
  C Z
  C Y
  C X
  C Y
  A Z
  A X
  A Z
  A Z
  A Z
  B Z
  A Z
  C Z
  A Z
  C Z
  B Z
  C Z
  C Z
  A Z
  A Z
  B X
  A Z
  A X
  A Z
  A X
  A Y
  A Z
  B Z
  C X
  A Z
  A Z
  B X
  A X
  C X
  C Z
  A X
  A Z
  A X
  C Y
  C Z
  A Z
  C Y
  A X
  A Z
  A Z
  B Z
  C Y
  A Z
  A Z
  C Z
  A X
  C X
  A Z
  A Z
  A Y
  C Z
  C Z
  A Z
  A X
  B Z
  A X
  A X
  A X
  A X
  A Z
  A Z
  A X
  A X
  C Z
  C Y
  C Y
  C Y
  A Z
  C X
  B Z
  C Y
  C Z
  A X
  A X
  A Z
  C Z
  C Z
  A Y
  C Y
  B X
  C Y
  A X
  A X
  A Y
  A X
  A Z
  A Z
  A X
  A Z
  A Z
  A Z
  A X
  A Z
  B Z
  A X
  A X
  A X
  C Z
  C X
  A Z
  C Y
  C Z
  A X
  A Z
  A Z
  A X
  A Z
  A X
  B Z
  A Z
  A Z
  A Z
  C Y
  C Z
  B Z
  A Z
  B Z
  A X
  A X
  A X
  C Y
  A Z
  A Z
  A Z
  C X
  A X
  A X
  A Z
  A Z
  A Z
  A Z
  B Z
  A X
  A Z
  A X
  C Z
  A Z
  A Z
  A Z
  B Z
  A Y
  A Z
  C Z
  B Z
  C Y
  A Z
  A X
  C Y
  A X
  A X
  A Z
  A Z
  A X
  B Z
  B X
  C Z
  C Z
  A Y
  A Z
  A X
  A Z
  A Z
  A Z
  A Z
  A Z
  B Z
  A Z
  B X
  A Z
  A Z
  C Z
  B Z
  A Z
  C X
  B Z
  C X
  B Z
  A Z
  A Z
  A Z
  A Z
  A X
  B Z
  A X
  B Z
  C Y
  A Z
  A Z
  C X
  A X
  A Z
  A Y
  A Z
  C Y
  C X
  C Z
  A X
  A Z
  C Z
  A Z
  A X
  A Z
  B Z
  A X
  A Z
  B Z
  C Y
  A Z
  C Y
  A Z
  C Y
  B X
  C Y
  A Z
  B Z
  A X
  B Z
  B Z
  C X
  A Z
  C Z
  A Z
  C Z
  A Z
  C Z
  B Z
  C Y
  C Z
  A Z
  C Y
  A Z
  C X
  B Y
  B Y
  C X
  C Y
  A Z
  C Z
  A Z
  C X
  A Z
  A Z
  C Y
  A Z
  A Z
  C X
  A Y
  A X
  A X
  B Z
  A Z
  C Z
  A Z
  B Z
  C Y
  C Z
  A Z
  C Y
  B X
  C Z
  A X
  C X
  C Y
  C Y
  C Y
  A Z
  A Z
  B Y
  C Y
  A Z
  A X
  A Z
  A X
  A Z
  C X
  C Z
  A X
  C Z
  B X
  A X
  C Z
  A Z
  C X
  A Y
  A Z
  A X
  A Z
  C Z
  B Z
  B Z
  A Z
  C Y
  A Z
  C Z
  C Y
  C Z
  A Z
  A Z
  B X
  C X
  C Z
  A X
  A Z
  A Y
  C Y
  A X
  A Z
  C Y
  A Z
  B X
  A Z
  A Z
  A Z
  A Z
  C X
  A X
  A Z
  A Y
  A X
  B Y
  A X
  A X
  A X
  A X
  B Z
  A X
  C Y
  C X
  A X
  A Z
  A X
  A Z
  A Z
  A Z
  A Z
  A X
  A Z
  C X
  C Z
  C Z
  A X
  B Y
  A X
  C Y
  A X
  C Z
  A X
  A Z
  A Z
  A Z
  A Z
  C X
  A X
  C Y
  A Z
  A Z
  C Y
  A Z
  A X
  A Z
  A X
  A Z
  B Y
  C Y
  B Y
  C Y
  A Y
  A Z
  C X
  B X
  A X
  A Y
  C Z
  A X
  B Z
  A X
  A X
  A Y
  A X
  A Z
  A Z
  C Z
  C X
  A Z
  C Y
  A Z
  A Z
  C X
  A Y
  A Z
  A X
  A Z
  A Z
  C X
  A Z
  A Z
  A Z
  C Y
  A X
  A X
  A X
  C Z
  A Z
  C Y
  A X
  A X
  C Y
  C X
  C Y
  A Y
  C X
  A Z
  A Z
  A Y
  C X
  A Z
  A Z
  A Z
  C Y
  C X
  A Z
  B Z
  A Z
  A X
  C Y
  A X
  C Y
  C Y
  A X
  C Y
  A X
  C Y
  B Z
  A Z
  A X
  A Z
  A X
  A X
  A Z
  A X
  A X
  C Z
  A Z
  B Y
  C X
  B X
  B X
  A Z
  A Y
  B Y
  A Z
  A X
  A X
  C Y
  C X
  B Z
  A Z
  C Y
  C X
  C Y
  A Y
  A Z
  C X
  A X
  A X
  A Z
  A Z
  B Z
  C X
  A Z
  B Z
  A X
  B Y
  C X
  A X
  A Y
  C X
  A X
  C Y
  A Z
  A Z
  A X
  A X
  C Z
  C Z
  B Z
  A X
  B Z
  B Y
  A Z
  A Z
  C Y
  A Z
  B Y
  A Z
  A X
  C Z
  C Z
  A X
  A X
  A X
  A Z
  A Z
  C Y
  A X
  A X
  A Z
  A X
  C X
  A Z
  A X
  B Z
  B X
  A X
  A X
  A Z
  B Z
  A X
  A Z
  C Y
  C Y
  B Z
  C Z
  A X
  B X
  B X
  A Z
  A X
  A Z
  C Y
  A X
  A X
  B Y
  C Y
  A X
  A X
  C Y
  A Z
  A Z
  C Z
  A Z
  B Z
  A Y
  A Z
  C Y
  B Y
  A X
  C X
  A X
  C Z
  A Z
  A X
  A Z
  A Z
  A X
  B Z
  C Z
  A Z
  A X
  C X
  A X
  C Y
  B Z
  B X
  C Z
  C X
  A X
  A X
  A Z
  A X
  C Y
  B Z
  A Z
  C Z
  A Z
  A Z
  A X
  B X
  A X
  A Z
  A X
  A X
  A Z
  A Z
  A Y
  A Z
  C Z
  B Z
  A X
  A X
  A X
  A Z
  B Z
  A Z
  A Z
  C Z
  C Y
  C Y
  A Z
  A X
  A Z
  C Z
  A X
  A X
  A Z
  A Z
  C X
  B Y
  A X
  B Z
  B Z
  A Z
  A Z
  C Z
  C Z
  A X
  A X
  A Z
  C Z
  A Z
  C Z
  B X
  A X
  A Z
  A Z
  C Z
  A X
  A Z
  B Y
  B X
  A X
  C Y
  C X
  C Y
  B X
  A X
  C Y
  A Z
  B Y
  A Y
  A X
  C Y
  A Z
  A Z
  A Z
  A Z
  A Z
  C Z
  A Z
  A Z
  A Z
  C X
  B X
  C Z
  A X
  B X
  A X
  C Y
  A X
  C X
  A X
  A Z
  A Z
  B X
  A X
  A Z
  A X
  C Z
  A Z
  A Z
  A X
  C Z
  A Z
  C X
  A Z
  A Z
  A Z
  A Z
  B Z
  A X
  A X
  C Y
  A Z
  A Z
  B Z
  A X
  A Z
  A Y
  A Z
  C X
  B Z
  A Z
  A X
  B Y
  A Z
  A X
  C X
  C X
  A X
  A Z
  A X
  A Z
  B Z
  B Y
  A Y
  A Z
  C Y
  B Z
  A Z
  C X
  C Y
  C Z
  C X
  A X
  A Z
  A X
  A X
  A Z
  A X
  A X
  A X
  A Z
  C Z
  C Y
  A Z
  A X
  C X
  B Z
  C Z
  C Y
  C Y
  A Z
  A X
  A Z
  A Z
  A Z
  A X
  A Z
  A Z
  A X
  C Z
  A X
  A X
  A Z
  C X
  B Y
  A X
  C Z
  A X
  C X
  A Z
  A X
  A Y
  C Z
  A X
  A Z
  C X
  B X
  A Z
  A Z
  A X
  A X
  A Z
  C Y
  C Z
  A X
  A Z
  C Z
  C X
  A X
  A Z
  A X
  A X
  B X
  C Z
  B Z
  A Z
  A X
  A X
  B Y
  A Z
  A X
  A X
  A Z
  A Z
  A Z
  A X
  C Y
  A Z
  C Y
  A Z
  A Z
  A X
  C Z
  A Z
  B X
  A X
  C Z
  A X
  A Y
  B X
  C X
  A X
  A X
  A Z
  A X
  A X
  A X
  C Y
  A Y
  A Z
  B Z
  B Z
  B Z
  A Z
  A Z
  A Z
  A X
  B X
  C Y
  A X
  A Z
  C Z
  B Y
  A X
  A Z
  A Z
  A X
  A X
  B Z
  A X
  C Y
  A Z
  A X
  A X
  A Z
  A Z
  A Z
  A Z
  A Z
  A X
  A Z
  A X
  A X
  C Z
  A X
  C Z
  A Z
  C Y
  A X
  A Z
  C Z
  A Z
  A Z
  A X
  A X
  A Z
  A X
  A Z
  B Z
  A X
  A X
  C X
  A Z
  A X
  A Z
  C Y
  C Y
  C Y
  C Y
  C Z
  A Z
  B X
  C Z
  A X
  A Z
  C Y
  A X
  A Z
  B X
  A Z
  C X
  C Z
  C X
  C X
  A Z
  A Z
  B X
  A Z
  A Z
  A Z
  B Z
  A Z
  C Z
  A X
  A X
  A Z
  A X
  A Z
  C Z
  C Z
  A Z
  C Z
  C X
  A Z
  A X
  B Z
  A X
  B Y
  C X
  A X
  A Y
  A Z
  A Z
  A X
  A X
  A Z
  A X
  A Z
  A X
  A Z
  A X
  A Y
  A X
  C Z
  A Z
  A Z
  A X
  A X
  A Z
  A X
  C Y
  C Z
  A Z
  A Y
  A Z
  A X
  A Z
  C X
  B X
  A Z
  C Z
  B Y
  A Z
  A Z
  C Y
  A X
  A Z
  A Z
  C Z
  C Y
  A Z
  B Y
  A X
  C Y
  A X
  A X
  A Z
  C Z
  A Z
  A Z
  A X
  C Z
  A X
  C Y
  C Y
  A X
  B X
  C X
  A Y
  A X
  A Z
  B X
  A X
  B Z
  A Z
  A X
  C X
  A X
  B X
  A X
  A Z
  A X
  C Y
  A Z
  C Z
  C Y
  A X
  B X
  C Y
  C X
  A X
  A Z
  A X
  A Z
  A X
  A X
  A Z
  A Z
  A X
  A Z
  A Y
  A X
  A X
  A Y
  A Z
  A Z
  C Z
  A X
  A Z
  A X
  A X
  B X
  A X
  B Y
  C Y
  A Z
  B Z
  A Z
  B Y
  A Z
  C Y
  A Z
  A X
  A X
  A Z
  C X
  C Z
  B X
  A X
  A Z
  A X
  A Z
  A Z
  B X
  A Z
  A X
  C Z
  B Y
  C Y
  C X
  A X
  A Z
  A X
  C Y
  A Z
  C Z
  A X
  A X
  A X
  A Z
  A Z
  A Z
  B X
  C X
  A Y
  B Z
  A X
  A Z
  A Z
  C X
  C Y
  A X
  A Z
  C Y
  A X
  A Z
  A X
  A Z
  A X
  A X
  B Z
  A X
  C X
  A X
  A X
  A X
  A Z
  A Z
  A X
  A Z
  C Y
  C Z
  B Z
  B X
  A Z
  A X
  C X
  C Y
  A X
  B Z
  B Z
  A Z
  B Z
  C Y
  A X
  A X
  A X
  C Y
  A Z
  A X
  A Z
  A Z
  A Z
  A X
  A Z
  A X
  A Z
  C Y
  A X
  C X
  C Y
  C Y
  C X
  A X
  C Y
  A Z
  C Y
  B Z
  B Z
  C Z
  A X
  B X
  C X
  A Z
  A Y
  A Z
  B Z
  A Z
  B Z
  A X
  A X
  A Z
  A Z
  A Y
  A Z
  A X
  A Y
  A Z
  A Z
  A Z
  A Z
  B X
  A Z
  A Z
  A Z
  A Z
  C Y
  B Y
  C X
  A Z
  B Z
  B X
  A X
  C Z
  A Z
  C Z
  A Z
  A X
  A X
  A X
  A X
  A X
  A Z
  C Y
  A X
  C X
  A Y
  C X
  C X
  A X
  A Z
  A X
  C Z
  A X
  C Y
  B Z
  C Y
  C Z
  B X
  A Z
  C Y
  A Z
  C Y
  A X
  A X
  A X
  A Z
  A Z
  A Z
  A Z
  C Z
  C Y
  A X
  C Y
  B Y
  A X
  A X
  A Z
  C Y
  C Z
  A X
  A X
  A Z
  A Z
  A X
  A X
  A Z`
}

describe('day02', () => {

  describe('calculateStrategyScore', () => {
    const testData = [
      {choiceOfOpponent: OpponentRPS.A, response: ResponseRPS.X, expectedScore: 4},
      {choiceOfOpponent: OpponentRPS.A, response: ResponseRPS.Y, expectedScore: 8},
      {choiceOfOpponent: OpponentRPS.A, response: ResponseRPS.Z, expectedScore: 3},
      {choiceOfOpponent: OpponentRPS.B, response: ResponseRPS.X, expectedScore: 1},
      {choiceOfOpponent: OpponentRPS.B, response: ResponseRPS.Y, expectedScore: 5},
      {choiceOfOpponent: OpponentRPS.B, response: ResponseRPS.Z, expectedScore: 9},
      {choiceOfOpponent: OpponentRPS.C, response: ResponseRPS.X, expectedScore: 7},
      {choiceOfOpponent: OpponentRPS.C, response: ResponseRPS.Y, expectedScore: 2},
      {choiceOfOpponent: OpponentRPS.C, response: ResponseRPS.Z, expectedScore: 6},
    ]

    it.each(testData)('gets $choiceOfOpponent, $response as input and returns $expectedScore', ({choiceOfOpponent, response, expectedScore}) => {
      const result = calculateStrategyScore(choiceOfOpponent, response)
      expect(result).toBe(expectedScore)
    })
  })

  describe('parseStrategies', () => {
    it('gets an empty list as input and returns no strategies', () => {
      const result: Strategy[] = parseStrategies(``)
      expect(result.length).toBe(0)
      expect(result).toStrictEqual([])
    })

    it('gets a list with one entry as input and returns one strategy', () => {
      const result: Strategy[] = parseStrategies(`A Y`)
      expect(result.length).toBe(1)
      expect(result).toStrictEqual([{choiceOfOpponent: OpponentRPS.A, response: ResponseRPS.Y, score: calculateStrategyScore(OpponentRPS.A, ResponseRPS.Y)}])
    })

    it('gets a list with three entries as input and returns three strategies', () => {
      const result: Strategy[] = parseStrategies(`A Y
      B X
      C Z`)
      expect(result.length).toBe(3)
      expect(result).toStrictEqual([
        {choiceOfOpponent: OpponentRPS.A, response: ResponseRPS.Y, score: calculateStrategyScore(OpponentRPS.A, ResponseRPS.Y)},
        {choiceOfOpponent: OpponentRPS.B, response: ResponseRPS.X, score: calculateStrategyScore(OpponentRPS.B, ResponseRPS.X)},
        {choiceOfOpponent: OpponentRPS.C, response: ResponseRPS.Z, score: calculateStrategyScore(OpponentRPS.C, ResponseRPS.Z)},
      ])
    })
  })

  describe('totalScoreOfStrategies', () => {
    it('gets no strategies as input and returns 0', () => {
      const result: number = totalScoreOfStrategies(parseStrategies(``))
      expect(result).toBe(0)
    })

    it('gets A->Y, B->X and C->Z strategies as input and returns 15', () => {
      const result: number = totalScoreOfStrategies(parseStrategies(`A Y
      B X
      C Z`))
      expect(result).toBe(15)
    })
  })

  describe('solves puzzle #1', () => {
    it('gets the puzzle strategies as input and returns the total score', () => {
      const solution: number = totalScoreOfStrategies(parseStrategies(aoc.puzzleInput))
      console.log('puzzle #1 answer: ', solution)
      expect(solution).toBe(10624)
    })
  })

  describe('findStrategicResponseOnChoiceOfOpponent', () => {
    const testData = [
      {choiceOfOpponent: OpponentRPS.A, responseStrategy: ResponseStrategyRPS.X, expectedResponse: ResponseRPS.Z},
      {choiceOfOpponent: OpponentRPS.B, responseStrategy: ResponseStrategyRPS.X, expectedResponse: ResponseRPS.X},
      {choiceOfOpponent: OpponentRPS.C, responseStrategy: ResponseStrategyRPS.X, expectedResponse: ResponseRPS.Y},
      {choiceOfOpponent: OpponentRPS.A, responseStrategy: ResponseStrategyRPS.Y, expectedResponse: ResponseRPS.X},
      {choiceOfOpponent: OpponentRPS.B, responseStrategy: ResponseStrategyRPS.Y, expectedResponse: ResponseRPS.Y},
      {choiceOfOpponent: OpponentRPS.C, responseStrategy: ResponseStrategyRPS.Y, expectedResponse: ResponseRPS.Z},
      {choiceOfOpponent: OpponentRPS.A, responseStrategy: ResponseStrategyRPS.Z, expectedResponse: ResponseRPS.Y},
      {choiceOfOpponent: OpponentRPS.B, responseStrategy: ResponseStrategyRPS.Z, expectedResponse: ResponseRPS.Z},
      {choiceOfOpponent: OpponentRPS.C, responseStrategy: ResponseStrategyRPS.Z, expectedResponse: ResponseRPS.X},
    ]

    it.each(testData)('gets $choiceOfOpponent, $responseStrategy as input and returns $expectedResponse', ({choiceOfOpponent, responseStrategy, expectedResponse}) => {
      const result = findStrategicResponseOnChoiceOfOpponent(choiceOfOpponent, responseStrategy)
      expect(result).toBe(expectedResponse)
    })
  })

  describe('parseResponseStrategies', () => {
    it('gets an empty list as input and returns no strategies', () => {
      const result: ResponseStrategy[] = parseResponseStrategies(``)
      expect(result.length).toBe(0)
      expect(result).toStrictEqual([])
    })

    it('gets a list with one entry as input and returns one strategy', () => {
      const result: ResponseStrategy[] = parseResponseStrategies(`A Y`)
      expect(result.length).toBe(1)
      expect(result).toStrictEqual([{choiceOfOpponent: OpponentRPS.A, responseStrategy: ResponseStrategyRPS.Y, response: ResponseRPS.X, score: calculateStrategyScore(OpponentRPS.A, ResponseRPS.X)}])
    })

    it('gets a list with three entries as input and returns three strategies', () => {
      const result: ResponseStrategy[] = parseResponseStrategies(`A Y
      B X
      C Z`)
      expect(result.length).toBe(3)
      expect(result).toStrictEqual([
        {choiceOfOpponent: OpponentRPS.A, responseStrategy: ResponseStrategyRPS.Y, response: ResponseRPS.X, score: calculateStrategyScore(OpponentRPS.A, ResponseRPS.X)},
        {choiceOfOpponent: OpponentRPS.B, responseStrategy: ResponseStrategyRPS.X, response: ResponseRPS.X, score: calculateStrategyScore(OpponentRPS.B, ResponseRPS.X)},
        {choiceOfOpponent: OpponentRPS.C, responseStrategy: ResponseStrategyRPS.Z, response: ResponseRPS.X, score: calculateStrategyScore(OpponentRPS.C, ResponseRPS.X)},
      ])
    })
  })

  describe('solves puzzle #2', () => {
    it('gets the puzzle strategies as input and returns the total score', () => {
      const solution: number = totalScoreOfStrategies(parseResponseStrategies(aoc.puzzleInput))
      console.log('puzzle #2 answer: ', solution)
      expect(solution).toBe(14060)
    })
  })
})
